'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var mobx = require('mobx');
var mobxReact = require('mobx-react');

var _class, _descriptor, _temp;
function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object['ke' + 'ys'](descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object['define' + 'Property'](target, property, desc); desc = null; } return desc; }
var JBSwitchService = (_class = (_temp =
function () {
  function JBSwitchService(props) {
    _classCallCheck(this, JBSwitchService);
    this.JBSwitchComponentDom = null;
    _initializerDefineProperty(this, "isLoading", _descriptor, this);
    this.config = mobx.observable(props);
  }
  _createClass(JBSwitchService, [{
    key: "onClick",
    value: function onClick() {
      var _this = this;
      var newValue = !this.config.value;
      if (typeof this.config.onBeforeChange == "function") {
        var response = this.config.onBeforeChange(newValue);
        if (typeof response.then == "function") {
          this.showLoading();
          response.then(function (data) {
            _this.callOnChange(newValue);
            _this.hideLoading();
          }).catch(function (e) {
            _this.hideLoading();
          });
        } else {
          this.callOnChange(newValue);
        }
      } else {
        this.callOnChange(newValue);
      }
    }
  }, {
    key: "showLoading",
    value: function showLoading() {
      this.isLoading = true;
    }
  }, {
    key: "hideLoading",
    value: function hideLoading() {
      this.isLoading = false;
    }
  }, {
    key: "callOnChange",
    value: function callOnChange(newValue) {
      var _this2 = this;
      var event = new Event("change", {
        detail: {
          oldValue: this.config.value,
          newValue: newValue
        },
        bubbles: true,
        cancelable: true
      });
      event.simulated = true;
      var tracker = this.JBSwitchComponentDom._valueTracker;
      if (tracker) {
        tracker.setValue(newValue);
      }
      this.JBSwitchComponentDom.value = newValue;
      if (this.config.onChange) {
        this.JBSwitchComponentDom.onchange = function (e) {
          return _this2.config.onChange(e);
        };
      }
      this.JBSwitchComponentDom.dispatchEvent(event);
    }
  }]);
  return JBSwitchService;
}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "isLoading", [mobx.observable], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function initializer() {
    return false;
  }
})), _class);

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === 'undefined') { return; }
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".jb-switch-component-wrapper{display:flex;flex-direction:row;align-items:center;justify-content:start}.jb-switch-component-wrapper .caption{display:inline-block;padding:0 0 0 8px;font-weight:400;color:#535353;transition:all 0.3s ease-in-out}.jb-switch-component-wrapper .caption.active{transition:all 0.3s ease-in-out;font-weight:700}.jb-switch-component-wrapper .svg-wrapper{width:71px;height:44px}.jb-switch-component-wrapper .svg-wrapper .switch-svg{width:71px;height:44px}.jb-switch-component-wrapper .svg-wrapper .switch-svg.active .trigger-circle{transition:all 0.3s ease-in-out;transform:translateX(280px)}.jb-switch-component-wrapper .svg-wrapper .switch-svg.active .trigger-circle-bar{transition:all 0.3s ease-in-out;transform:translateX(280px);stroke:#00dc55}.jb-switch-component-wrapper .svg-wrapper .switch-svg.active .bg-bar{fill:#00dc55;transition:all 0.3s ease-in-out}.jb-switch-component-wrapper .svg-wrapper .switch-svg .bg-bar{fill:#e3e3e3;transition:all 0.3s ease-in-out}.jb-switch-component-wrapper .svg-wrapper .switch-svg .trigger-circle{transition:all 0.3s ease-in-out}.jb-switch-component-wrapper .svg-wrapper .switch-svg .trigger-circle-bar{fill:transparent;stroke:#039be5;stroke-width:20px;transition:all 0.3s ease-in-out;stroke-dasharray:800,800;stroke-dashoffset:0;stroke-linecap:round}.jb-switch-component-wrapper .svg-wrapper .switch-svg .trigger-circle-bar.loading{animation:jb-switch-loading-dash 1.5s ease-in-out infinite}@keyframes jb-switch-loading-dash{0%{stroke-dasharray:1,800;stroke-dashoffset:0}50%{stroke-dasharray:600,800;stroke-dashoffset:-600}100%{stroke-dasharray:1,800;stroke-dashoffset:0}}\n";
styleInject(css);

var _class$1;
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }
function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
var JBSwitch = mobxReact.observer(_class$1 =
function (_React$Component) {
  _inherits(JBSwitch, _React$Component);
  function JBSwitch(props) {
    var _this;
    _classCallCheck$1(this, JBSwitch);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(JBSwitch).call(this, props));
    _this.service = new JBSwitchService(props);
    return _this;
  }
  _createClass$1(JBSwitch, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.service.config.value != nextProps.value) {
        this.service.config.value = nextProps.value;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var renderDom = React.createElement("div", {
        className: "jb-switch-component-wrapper",
        ref: function ref(dom) {
          _this2.service.JBSwitchComponentDom = dom;
        }
      }, React.createElement("div", {
        className: "caption " + (this.service.config.value ? 'active' : '')
      }, this.service.config.trueTitle ? this.service.config.trueTitle : ''), React.createElement("div", {
        className: "svg-wrapper",
        onClick: function onClick(e) {
          return _this2.service.onClick(e);
        }
      }, React.createElement("svg", {
        className: "switch-svg " + (this.service.config.value ? 'active' : ''),
        viewBox: "0 0 710 440"
      }, React.createElement("defs", null, React.createElement("filter", {
        xmlns: "http://www.w3.org/2000/svg",
        id: "dropshadow",
        height: "150%"
      }, React.createElement("feGaussianBlur", {
        in: "SourceAlpha",
        stdDeviation: "7"
      }), React.createElement("feOffset", {
        dx: "0",
        dy: "0",
        result: "offsetblur"
      }), React.createElement("feComponentTransfer", null, React.createElement("feFuncA", {
        type: "linear",
        slope: "0.9"
      })), React.createElement("feMerge", null, React.createElement("feMergeNode", null), React.createElement("feMergeNode", {
        in: "SourceGraphic"
      }))), React.createElement("radialGradient", {
        id: "color1",
        cx: "50%",
        cy: "50%",
        r: "75%"
      }, React.createElement("stop", {
        offset: "0%",
        style: {
          stopColor: "rgb(255,255,255)",
          stopOpacity: "1"
        }
      }), React.createElement("stop", {
        offset: "99%",
        style: {
          stopColor: "rgb(224,224,224)",
          stopOpacity: "1"
        }
      }), React.createElement("stop", {
        offset: "100%",
        style: {
          stopColor: "rgb(224,224,224)",
          stopOpacity: "1"
        }
      }))), React.createElement("rect", {
        className: "bg-bar",
        x: "20",
        y: "40",
        height: "360",
        width: "680",
        stroke: "red",
        rx: "180",
        strokeWidth: "0"
      }), React.createElement("circle", {
        className: "trigger-circle",
        fill: "url(#color1)",
        cx: "220",
        cy: "220",
        r: "200",
        filter: "url(#dropshadow)"
      }), React.createElement("circle", {
        className: "trigger-circle-bar " + (this.service.isLoading ? 'loading' : ''),
        cx: "220",
        cy: "220",
        r: "120",
        filter: "url(#dropshadow)"
      }))), React.createElement("div", {
        className: "caption " + (!this.service.config.value ? 'active' : '')
      }, this.service.config.falseTitle ? this.service.config.falseTitle : ''));
      return renderDom;
    }
  }]);
  return JBSwitch;
}(React.Component)) || _class$1;

module.exports = JBSwitch;
